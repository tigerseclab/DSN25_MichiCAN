#include "variant.h"
#include <due_can.h>

#define SPEED                    CAN_BPS_125K
#define SAMPLING_POINT           1.4       // Add 1 to the sampling point

#define sda PIO_PC7
#define scl PIO_PC1

#define Serial SerialUSB

int counter = 0;
int counter2 = 0;
int stuffcnt = 0;
bool can_frame[27];
volatile bool sof = false;
bool start_counterattack = false;
uint16_t state = 0;
uint8_t len = 0;
volatile bool first_cycle = false;
volatile uint8_t retransmission_count = 0;

// Generated by canid_catch_less_than.py:
// using ECU CAN IDs: ['0x47', '0x49', '0x4a', '0x4b', '0x4c', '0x76', '0x77', '0x78', '0x7d', '0x81', '0x82', '0x83', '0x85', '0x91', '0x92', '0x165', '0x167', '0x178', '0x186', '0x187', '0x188', '0x18a', '0x200', '0x202', '0x204', '0x213', '0x214', '0x216', '0x217', '0x230', '0x242', '0x261', '0x265', '0x2a1', '0x33b', '0x34d', '0x350', '0x352', '0x3a8', '0x3aa', '0x3ab', '0x3b3', '0x3c3', '0x3ca', '0x3cc', '0x3d8', '0x3e0', '0x3e2', '0x3e5', '0x3e6', '0x3eb', '0x3ee', '0x40a', '0x415', '0x416', '0x422', '0x42c', '0x430', '0x431', '0x43a', '0x443', '0x451', '0x453', '0x454', '0x455', '0x456', '0x466', '0x480', '0x4b0', '0x596', '0x59e', '0x5b3', '0x5b5', '0x680', '0x681', '0x6b0', '0x6b1', '0x706', '0x70e', '0x716', '0x71e', '0x724', '0x72c', '0x730', '0x737', '0x738', '0x73f', '0x760', '0x764', '0x765', '0x768', '0x76c', '0x76d', '0x792', '0x79a', '0x7b1', '0x7b2', '0x7b9', '0x7ba', '0x7cd', '0x7df', '0x7f1', '0x7f9']
// built for ECU bus ID: 0x7f9
void state_machine_run(uint8_t value) {
  
  bitWrite(state, 10 - len, value);
  len++;
  
  if (state > 2041) {
    return;
  }
  if (len == 11 && state == 2041) {
    start_counterattack = true;
    return;
  }
  if (len == 5 && state == 0) {
    start_counterattack = true;
    return;
  }
  if (len == 5 && state == 256) {
    start_counterattack = true;
    return;
  }
  if (len == 5 && state == 1216) {
    start_counterattack = true;
    return;
  }
  if (len == 5 && state == 1344) {
    start_counterattack = true;
    return;
  }
  if (len == 5 && state == 1472) {
    start_counterattack = true;
    return;
  }
  if (len == 5 && state == 1600) {
    start_counterattack = true;
    return;
  }
  if (len == 5 && state == 1728) {
    start_counterattack = true;
    return;
  }
  if (len == 6 && state == 160) {
    start_counterattack = true;
    return;
  }
  if (len == 6 && state == 224) {
    start_counterattack = true;
    return;
  }
  if (len == 6 && state == 416) {
    start_counterattack = true;
    return;
  }
  if (len == 6 && state == 480) {
    start_counterattack = true;
    return;
  }
  if (len == 6 && state == 736) {
    start_counterattack = true;
    return;
  }
  if (len == 6 && state == 864) {
    start_counterattack = true;
    return;
  }
  if (len == 6 && state == 1312) {
    start_counterattack = true;
    return;
  }
  if (len == 6 && state == 1568) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 80) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 208) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 336) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 400) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 464) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 592) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 624) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 656) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 688) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 720) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 784) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 912) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 1008) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 1136) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 1168) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 1296) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 1552) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 1680) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 1872) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 1904) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 104) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 136) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 152) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 200) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 328) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 360) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 456) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 520) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 536) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 552) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 568) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 584) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 616) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 648) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 680) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 712) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 776) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 808) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 856) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 904) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 952) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1024) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1184) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1280) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1408) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1440) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1536) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1696) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1856) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1920) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1928) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1952) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1984) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 2000) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 2016) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 64) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 96) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 112) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 192) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 320) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 352) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 368) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 384) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 448) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 544) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 640) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 704) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 768) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 772) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 800) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 804) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 816) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 820) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 828) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 832) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 836) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 840) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 896) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 928) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 948) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 976) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1036) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1052) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1060) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1076) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1084) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1092) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1100) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1116) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1120) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1128) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1132) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1156) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1164) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1196) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1204) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1212) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1288) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1292) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1416) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1420) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1424) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1432) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1452) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1468) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1548) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1668) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1676) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1708) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1716) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1724) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1792) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1800) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1808) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1816) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1868) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1940) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1948) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1964) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1972) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1980) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 2028) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 2036) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 2044) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 68) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 78) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 100) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 116) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 134) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 148) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 150) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 196) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 198) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 324) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 326) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 372) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 380) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 388) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 396) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 452) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 528) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 548) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 564) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 576) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 580) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 610) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 614) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 644) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 646) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 674) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 676) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 678) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 708) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 710) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 824) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 846) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 852) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 900) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 932) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 940) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 944) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 960) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 964) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 968) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 980) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 988) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1000) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1004) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1032) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1040) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1048) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1056) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1064) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1066) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1070) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1074) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1080) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1088) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1096) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1112) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1124) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1154) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1160) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1162) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1192) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1194) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1202) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1208) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1210) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1428) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1436) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1448) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1456) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1464) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1544) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1546) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1666) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1672) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1674) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1704) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1706) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1714) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1720) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1722) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1796) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1804) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1812) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1820) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1824) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1826) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1830) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1832) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1834) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1838) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1842) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1844) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1850) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1852) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1864) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1866) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1890) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1894) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1898) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1902) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1936) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1944) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1960) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1992) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 2008) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 2012) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 2024) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 70) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 72) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 77) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 102) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 103) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 121) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 122) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 123) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 124) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 126) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 127) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 128) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 132) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 144) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 147) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 356) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 358) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 374) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 375) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 377) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 378) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 379) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 382) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 383) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 393) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 395) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 398) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 399) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 454) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 455) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 513) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 515) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 517) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 518) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 519) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 530) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 533) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 550) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 551) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 561) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 562) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 563) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 566) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 567) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 579) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 582) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 583) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 608) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 612) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 672) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 826) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 844) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 849) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 851) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 854) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 855) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 902) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 903) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 934) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 935) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 937) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 942) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 943) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 946) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 962) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 966) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 967) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 971) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 973) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 974) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 975) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 982) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 983) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 985) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 986) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 987) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 990) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 991) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 993) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 995) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 996) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 999) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1002) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1007) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1035) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1042) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1043) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1044) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1047) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1050) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1051) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1059) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1069) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1083) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1090) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1098) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1099) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1104) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1106) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1111) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1114) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1115) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1127) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1153) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1201) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1431) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1439) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1450) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1451) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1458) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1460) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1462) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1463) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1466) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1467) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1799) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1807) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1815) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1823) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1829) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1837) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1841) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1846) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1849) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1854) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1889) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1897) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1939) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1947) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1962) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1963) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1968) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1971) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1976) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1979) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1994) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1995) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1996) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1998) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1999) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 2010) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 2011) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 2014) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 2026) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 2027) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 2032) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 2034) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 2035) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 2040) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 2042) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 2043) {
    start_counterattack = true;
    return;
  }
  return;
}
// End generated code



void reset_state_machine() {
    state = 0;
    len = 0;
}

void TC3_Handler() {
    TC_GetStatus(TC1, 0);

    PIOC->PIO_CODR = sda;   // External Timer
    PIOC->PIO_SODR = sda;

    bool value = PIOA->PIO_PDSR & PIO_PA1A_CANRX0;

    if (sof == true) {    // Start arbitration
        counter2++;
        if (counter2 < 25 && !start_counterattack) {
            if (can_frame[counter2 - 2] != value && stuffcnt == 5) {
                stuffcnt = 0;
                counter2--;
            }
            else if (can_frame[counter2 - 2] == value && stuffcnt < 5) {
                can_frame[counter2 - 1] = value;
                state_machine_run(value);
                stuffcnt++;
            }
            else if (can_frame[counter2 - 2] != value && stuffcnt < 5) {
                can_frame[counter2 - 1] = value;
                state_machine_run(value);
                stuffcnt = 1;
            }
        }

        if (first_cycle == true) {
            first_cycle = false;
            NVIC_DisableIRQ(TC3_IRQn);
            startTimer(TC1, 0, TC3_IRQn, SPEED);
        }

        if (counter2 == 21) {
            PIOA->PIO_PDR = PIO_PA0A_CANTX0;
            PIOA->PIO_ODR = PIO_PA0A_CANTX0;
            sof = false;
            counter2 = 0;
            retransmission_count++;
        }

        else if (counter2 == 14) {
            if (start_counterattack == true) {    // Counterattack
                start_counterattack = false;
                PIOA->PIO_PER = PIO_PA0A_CANTX0;    // Multiplex CAN_TX to GPIO
                PIOA->PIO_OER = PIO_PA0A_CANTX0;    // Define CAN_TX as output
                PIOC->PIO_CODR = PIO_PA0A_CANTX0;   // set pin to LOW
            }
        }
    }
    else {    // Keep for retransmissions
        if (value == 1) {
            counter++;
        }
        else if (value == 0 && counter < 11) {
            counter = 0;
        }

        if (counter >= 11 && value == 0) {    //SOF
            sof = true;
            counter = 0;
            stuffcnt = 1;
            can_frame[0] = 0;
            counter2 = 1;
            reset_state_machine();
        }
    }

    PIOC->PIO_CODR = scl;   // External Timer
    PIOC->PIO_SODR = scl;
}

void startTimer(Tc* tc, uint32_t channel, IRQn_Type irq, uint32_t frequency) {

    //Enable or disable write protect of PMC registers.
    pmc_set_writeprotect(false);
    //Enable the specified peripheral clock.
    pmc_enable_periph_clk((uint32_t)irq);

    TC_Configure(tc, channel, TC_CMR_WAVE | TC_CMR_WAVSEL_UP_RC | TC_CMR_TCCLKS_TIMER_CLOCK4);
    uint32_t rc = VARIANT_MCK / 128 / frequency;

    TC_SetRA(tc, channel, rc / 2);
    TC_SetRC(tc, channel, rc);
    TC_Start(tc, channel);

    tc->TC_CHANNEL[channel].TC_IER = TC_IER_CPCS;
    tc->TC_CHANNEL[channel].TC_IDR = ~TC_IER_CPCS;
    NVIC_EnableIRQ(irq);
}

void MichiCAN_Sync() {
    first_cycle = true;
    sof = true;
    counter = 0;
    can_frame[0] = 0;
    counter2 = 1;
    stuffcnt = 1;
    reset_state_machine();
    NVIC_DisableIRQ(TC3_IRQn);
    startTimer(TC1, 0, TC3_IRQn, (1 / SAMPLING_POINT) * SPEED);
    detachInterrupt(PIO_PA1A_CANRX0);
}

void setup() {

    // start serial port at 115200 bps:
    Serial.begin(115200);

    // Verify CAN0 and CAN1 initialization, baudrate is 1Mb/s:
    if (Can0.begin(SPEED) &&
        Can1.begin(SPEED)) {
    }
    else {
        Serial.println("CAN initialization (sync) ERROR");
    }

    PMC->PMC_PCER0 |= PMC_PCER0_PID11; // PIOA power ON

    //Multiplex CAN_RX to GPIO (Peripheral Enable Register)
    PIOA->PIO_PER = PIO_PA1A_CANRX0;

    //Set CAN_RX as input (Ouput Disable Register)
    PIOA->PIO_ODR = PIO_PA1A_CANRX0;

    //Disable pull-up on both pins (Pull Up Disable Register)
    PIOA->PIO_PUDR = PIO_PA1A_CANRX0;
    PIOA->PIO_PUDR = PIO_PA0A_CANTX0;

    //Use Pins 33 and 35 for external time measurement on ESP32
    PIOC->PIO_PER = scl;
    PIOC->PIO_PER = sda;

    //Set Pins 33 and 35 as output (Ouput Enable Register)
    PIOC->PIO_OER = scl;
    PIOC->PIO_OER = sda;

    Can0.watchFor();
}

void loop()
{
    if (sof == false) {
        attachInterrupt(PIO_PA1A_CANRX0, MichiCAN_Sync, FALLING); //Indicates SOF
    }
}
