#include "variant.h"
#include <due_can.h>

#define SPEED                    CAN_BPS_50K
#define SAMPLING_POINT           1.4       // Add 1 to the sampling point

#define sda PIO_PC7
#define scl PIO_PC1

#define Serial SerialUSB

int counter = 0;
int counter2 = 0;
int stuffcnt = 0;
bool can_frame[27];
volatile bool sof = false;
bool start_counterattack = false;
uint16_t state = 0;
uint8_t len = 0;
volatile bool first_cycle = false;
volatile uint8_t retransmission_count = 0;

// Generated by canid_catch_less_than.py:
// using ECU CAN IDs: ['0x10', '0x20', '0x30', '0x40', '0x4a', '0x4b', '0x50', '0x60', '0x6a', '0x70', '0x80', '0x90', '0xa0', '0xa5', '0xb0', '0xc0', '0xc8', '0xd0', '0xe0', '0xf0', '0xf5', '0xf8', '0x100', '0x120', '0x130', '0x138', '0x140', '0x150', '0x160', '0x170', '0x17e', '0x180', '0x190', '0x1a0', '0x1a8', '0x1b0', '0x1b5', '0x1c0', '0x1d0', '0x1e0', '0x1e8', '0x200', '0x208', '0x210', '0x213', '0x218', '0x229', '0x230', '0x250', '0x252', '0x260', '0x269', '0x270', '0x280', '0x290', '0x298', '0x2a0', '0x2a5', '0x2b0', '0x2d0', '0x2d4', '0x2d8', '0x2e0', '0x2f0', '0x310', '0x340', '0x345', '0x360', '0x380', '0x385', '0x388', '0x390', '0x398', '0x3b4', '0x3da', '0x3e2', '0x3ea', '0x400', '0x405', '0x40a', '0x420', '0x435', '0x455', '0x581', '0x5a0', '0x5e2', '0x62e', '0x62f', '0x630', '0x631', '0x63e', '0x63f', '0x64a', '0x64b', '0x670', '0x671', '0x680', '0x681', '0x682', '0x683', '0x690', '0x695', '0x696', '0x697', '0x698', '0x6a0', '0x6a1', '0x6a2', '0x6a4', '0x6a5', '0x6a6', '0x6a7', '0x6b0', '0x6b1', '0x6d0', '0x6d1', '0x6d2', '0x6d3', '0x6d4', '0x6d5', '0x6d6', '0x6d7', '0x706', '0x70e', '0x721', '0x726', '0x729', '0x72e', '0x730', '0x734', '0x736', '0x737', '0x738', '0x73c', '0x73e', '0x73f', '0x760', '0x764', '0x765', '0x768', '0x76c', '0x76d', '0x784', '0x78c', '0x793', '0x797', '0x79b', '0x79f', '0x7b2', '0x7ba', '0x7d0', '0x7d8', '0x7df', '0x7e0', '0x7e1', '0x7e5', '0x7e8', '0x7e9', '0x7ed', '0x7f1', '0x7f9']
// built for ECU bus ID: 0x7f9
void state_machine_run(uint8_t value) {
  
  bitWrite(state, 10 - len, value);
  len++;
  
  if (state > 2041) {
    return;
  }
  if (len == 11 && state == 2041) {
    start_counterattack = true;
    return;
  }
  if (len == 4 && state == 1152) {
    start_counterattack = true;
    return;
  }
  if (len == 5 && state == 1344) {
    start_counterattack = true;
    return;
  }
  if (len == 6 && state == 800) {
    start_counterattack = true;
    return;
  }
  if (len == 6 && state == 1120) {
    start_counterattack = true;
    return;
  }
  if (len == 6 && state == 1312) {
    start_counterattack = true;
    return;
  }
  if (len == 6 && state == 1760) {
    start_counterattack = true;
    return;
  }
  if (len == 6 && state == 1856) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 0) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 272) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 496) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 576) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 704) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 768) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 848) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 880) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 928) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 960) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 1040) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 1296) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 1424) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 1456) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 1488) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 1520) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 1552) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 1616) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 1632) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 1728) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 1808) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 1904) {
    start_counterattack = true;
    return;
  }
  if (len == 7 && state == 1984) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 24) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 40) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 56) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 88) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 120) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 136) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 152) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 168) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 184) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 216) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 232) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 264) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 296) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 328) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 344) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 360) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 392) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 408) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 440) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 456) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 472) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 568) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 600) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 632) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 648) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 680) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 696) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 744) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 760) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 792) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 840) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 872) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 952) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1016) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1064) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1080) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1096) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1112) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1288) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1416) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1448) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1480) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1512) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1544) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1656) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1672) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1704) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1720) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1752) {
    start_counterattack = true;
    return;
  }
  if (len == 8 && state == 1960) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 20) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 36) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 52) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 68) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 76) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 84) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 100) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 108) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 116) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 132) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 148) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 180) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 196) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 204) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 212) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 228) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 252) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 260) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 292) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 308) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 316) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 324) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 340) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 356) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 372) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 388) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 404) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 420) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 428) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 452) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 468) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 484) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 492) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 516) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 524) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 532) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 540) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 548) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 556) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 564) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 596) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 612) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 620) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 628) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 644) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 660) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 668) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 692) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 732) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 740) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 756) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 788) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 868) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 908) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 916) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 924) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 944) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 980) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 988) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 996) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1004) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1012) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1036) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1060) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1092) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1284) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1412) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1444) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1476) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1508) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1540) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1572) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1588) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1604) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1612) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1652) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1668) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1692) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1716) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1920) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1928) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1956) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1972) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 1980) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 2004) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 2036) {
    start_counterattack = true;
    return;
  }
  if (len == 9 && state == 2044) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 18) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 34) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 50) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 66) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 72) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 82) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 98) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 104) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 114) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 130) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 146) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 162) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 166) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 178) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 194) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 202) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 210) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 226) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 242) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 246) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 250) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 258) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 290) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 306) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 314) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 322) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 338) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 354) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 370) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 376) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 378) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 380) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 386) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 402) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 418) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 426) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 434) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 438) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 450) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 466) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 482) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 490) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 514) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 522) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 538) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 546) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 554) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 562) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 610) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 618) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 626) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 642) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 658) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 666) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 674) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 678) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 690) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 722) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 726) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 730) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 738) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 754) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 786) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 834) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 838) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 866) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 898) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 902) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 906) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 914) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 922) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 950) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 976) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 978) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 984) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 992) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1000) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1008) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1010) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1026) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1030) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1032) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1058) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1074) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1078) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1090) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1106) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1110) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1282) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1410) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1442) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1472) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1474) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1504) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1536) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1538) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1568) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1570) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1576) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1578) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1580) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1586) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1592) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1594) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1596) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1600) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1602) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1608) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1650) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1682) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1690) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1714) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1792) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1794) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1796) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1800) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1802) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1804) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1826) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1828) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1834) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1836) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1842) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1850) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1890) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1894) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1898) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1902) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1926) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1934) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1952) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1954) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1968) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 1976) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 2002) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 2010) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 2018) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 2022) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 2026) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 2030) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 2034) {
    start_counterattack = true;
    return;
  }
  if (len == 10 && state == 2042) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 17) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 33) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 49) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 65) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 81) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 97) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 107) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 113) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 129) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 145) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 161) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 164) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 177) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 193) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 201) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 209) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 225) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 241) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 244) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 249) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 257) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 289) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 305) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 313) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 321) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 337) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 353) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 369) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 383) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 385) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 401) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 417) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 425) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 433) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 436) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 449) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 465) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 481) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 489) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 513) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 521) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 529) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 530) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 537) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 544) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 545) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 552) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 561) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 593) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 595) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 609) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 616) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 625) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 641) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 657) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 665) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 673) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 676) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 689) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 721) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 725) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 729) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 737) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 753) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 785) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 833) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 836) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 865) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 897) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 900) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 905) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 913) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 921) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 949) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 987) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 995) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1003) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1025) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1028) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1035) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1057) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1072) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1073) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1076) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1088) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1089) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1104) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1105) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1108) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1280) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1281) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1408) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1441) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1507) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1681) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1684) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1689) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1699) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1799) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1807) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1824) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1831) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1832) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1839) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1841) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1845) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1849) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1853) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1889) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1897) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1925) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1933) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1936) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1937) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1938) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1940) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1941) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1942) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1944) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1945) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1946) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1948) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1949) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1950) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1971) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 1979) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 2001) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 2009) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 2012) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 2013) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 2014) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 2020) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 2028) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 2032) {
    start_counterattack = true;
    return;
  }
  if (len == 11 && state == 2040) {
    start_counterattack = true;
    return;
  }
  return;
}
// End generated code



void reset_state_machine() {
    state = 0;
    len = 0;
}

void TC3_Handler() {
    TC_GetStatus(TC1, 0);

    PIOC->PIO_CODR = sda;   // External Timer
    PIOC->PIO_SODR = sda;

    bool value = PIOA->PIO_PDSR & PIO_PA1A_CANRX0;

    if (sof == true) {    // Start arbitration
        counter2++;
        if (counter2 < 25 && !start_counterattack) {
            if (can_frame[counter2 - 2] != value && stuffcnt == 5) {
                stuffcnt = 0;
                counter2--;
            }
            else if (can_frame[counter2 - 2] == value && stuffcnt < 5) {
                can_frame[counter2 - 1] = value;
                state_machine_run(value);
                stuffcnt++;
            }
            else if (can_frame[counter2 - 2] != value && stuffcnt < 5) {
                can_frame[counter2 - 1] = value;
                state_machine_run(value);
                stuffcnt = 1;
            }
        }

        if (first_cycle == true) {
            first_cycle = false;
            NVIC_DisableIRQ(TC3_IRQn);
            startTimer(TC1, 0, TC3_IRQn, SPEED);
        }

        if (counter2 == 21) {
            PIOA->PIO_PDR = PIO_PA0A_CANTX0;
            PIOA->PIO_ODR = PIO_PA0A_CANTX0;
            sof = false;
            counter2 = 0;
            retransmission_count++;
        }

        else if (counter2 == 14) {
            if (start_counterattack == true) {    // Counterattack
                start_counterattack = false;
                PIOA->PIO_PER = PIO_PA0A_CANTX0;    // Multiplex CAN_TX to GPIO
                PIOA->PIO_OER = PIO_PA0A_CANTX0;    // Define CAN_TX as output
                PIOC->PIO_CODR = PIO_PA0A_CANTX0;   // set pin to LOW
            }
        }
    }
    else {    // Keep for retransmissions
        if (value == 1) {
            counter++;
        }
        else if (value == 0 && counter < 11) {
            counter = 0;
        }

        if (counter >= 11 && value == 0) {    //SOF
            sof = true;
            counter = 0;
            stuffcnt = 1;
            can_frame[0] = 0;
            counter2 = 1;
            reset_state_machine();
        }
    }

    PIOC->PIO_CODR = scl;   // External Timer
    PIOC->PIO_SODR = scl;
}

void startTimer(Tc* tc, uint32_t channel, IRQn_Type irq, uint32_t frequency) {

    //Enable or disable write protect of PMC registers.
    pmc_set_writeprotect(false);
    //Enable the specified peripheral clock.
    pmc_enable_periph_clk((uint32_t)irq);

    TC_Configure(tc, channel, TC_CMR_WAVE | TC_CMR_WAVSEL_UP_RC | TC_CMR_TCCLKS_TIMER_CLOCK4);
    uint32_t rc = VARIANT_MCK / 128 / frequency;

    TC_SetRA(tc, channel, rc / 2);
    TC_SetRC(tc, channel, rc);
    TC_Start(tc, channel);

    tc->TC_CHANNEL[channel].TC_IER = TC_IER_CPCS;
    tc->TC_CHANNEL[channel].TC_IDR = ~TC_IER_CPCS;
    NVIC_EnableIRQ(irq);
}

void MichiCAN_Sync() {
    first_cycle = true;
    sof = true;
    counter = 0;
    can_frame[0] = 0;
    counter2 = 1;
    stuffcnt = 1;
    reset_state_machine();
    NVIC_DisableIRQ(TC3_IRQn);
    startTimer(TC1, 0, TC3_IRQn, (1 / SAMPLING_POINT) * SPEED);
    detachInterrupt(PIO_PA1A_CANRX0);
}

void setup() {

    // start serial port at 115200 bps:
    Serial.begin(115200);

    // Verify CAN0 and CAN1 initialization, baudrate is 1Mb/s:
    if (Can0.begin(SPEED) &&
        Can1.begin(SPEED)) {
    }
    else {
        Serial.println("CAN initialization (sync) ERROR");
    }

    PMC->PMC_PCER0 |= PMC_PCER0_PID11; // PIOA power ON

    //Multiplex CAN_RX to GPIO (Peripheral Enable Register)
    PIOA->PIO_PER = PIO_PA1A_CANRX0;

    //Set CAN_RX as input (Ouput Disable Register)
    PIOA->PIO_ODR = PIO_PA1A_CANRX0;

    //Disable pull-up on both pins (Pull Up Disable Register)
    PIOA->PIO_PUDR = PIO_PA1A_CANRX0;
    PIOA->PIO_PUDR = PIO_PA0A_CANTX0;

    //Use Pins 33 and 35 for external time measurement on ESP32
    PIOC->PIO_PER = scl;
    PIOC->PIO_PER = sda;

    //Set Pins 33 and 35 as output (Ouput Enable Register)
    PIOC->PIO_OER = scl;
    PIOC->PIO_OER = sda;

    Can0.watchFor();
}

void loop()
{
    if (sof == false) {
        attachInterrupt(PIO_PA1A_CANRX0, MichiCAN_Sync, FALLING); //Indicates SOF
    }
}
